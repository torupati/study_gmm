# GitHub Actions workflow for Python using uv

name: Python Error Check and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # Install uv using pip. This is the recommended way.
    - name: Install uv
      run: pip install uv

    # Install dependencies from pyproject.toml using uv
    - name: Install dependencies
      run: uv pip install .

    # Run tests with pytest. Use uv run to execute pytest from the virtual environment.
    - name: Test with pytest
      run: uv run pytest -v

    # Run linting with flake8, also using uv run.
    - name: Lint with flake8
      run: |
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Run pylint with uv run. Note: The `git` command here is not uv-specific.
    - name: Analysing the code with pylint
      run: |
        sudo apt-get -y install graphviz
        uv run pylint $(git ls-files 'study_gmm/*.py') --output=lint.txt --exit-zero

    # Upload the linting artifact as before.
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: lint.txt
        path: lint.txt
